# 不配置默认单机
mode:
  # 运行模式类型。可选配置：Standalone、Cluster
  type: Standalone
  repository:
    # 持久化仓库类型
    type: JDBC
# todo 修改MySQL配置
dataSources:
  ds_master:
    dataSourceClassName: com.zaxxer.hikari.HikariDataSource
    driverClassName: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://177.177.177.101:3306/init_db?serverZoneId=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowPublicKeyRetrieval=true&rewriteBatchedStatements=true
    username: root
    password: 123456
#  # 从库在需要时开启
#  ds_slave:
#    dataSourceClassName: com.zaxxer.hikari.HikariDataSource
#    driverClassName: com.mysql.cj.jdbc.Driver
#    url: jdbc:mysql://177.177.177.101:3307/init_db?serverZoneId=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowPublicKeyRetrieval=true&rewriteBatchedStatements=true
#    username: root
#    password: 123456
props:
  # 显示SQL
  sql-show: true
  # 开启简单SQL显示模式
  sql-simple: true
rules:
  # 单表规则（必须配置项，旨在指定能够让ShardingSphere管理的数据源或表）
  - !SINGLE
    tables:
      # 加载全部单表
      - "*.*"
    # 默认数据源
    defaultDataSource: ds_master
  # SQL解析
  - !SQL_PARSER
    # SQL语句本地缓存配置项
    sqlStatementCache:
      # 本地缓存初始容量
      initialCapacity: 2000
      # 本地缓存最大容量
      maximumSize: 65536
    # 解析树本地缓存配置项
    parseTreeCache:
      # 本地缓存初始容量
      initialCapacity: 128
      # 本地缓存最大容量
      maximumSize: 1024
  # 数据加密
  - !ENCRYPT
    # 首先定义加密算法
    encryptors:
      # AES加密算法
      aes_encryptor:
        type: AES
        props:
          aes-key-value: spring-boot-init-template
    tables:
      # 加密user表中的数据
      t_user:
        columns:
          # 加密密码
          user_password:
            cipher:
              name: user_password
              encryptorName: aes_encryptor
#  # 读写分离（从库开启后开启，使用之前务必请先理解读写分离和事务的关系，因为一旦在业务中使用的事务，那么读写操作都会只发生在主库）
#  - !READWRITE_SPLITTING
#    dataSources:
#      # 读写库配置名称（主库写，从库读，只允许一写多读）
#      readwrite_ds:
#        writeDataSourceName: ds_master
#        readDataSourceNames:
#          - ds_slave
#        # 负载均衡算法名称
#        loadBalancerName: RANDOM
#        # 事务内读请求的路由策略
#        transactionalReadQueryStrategy: PRIMARY
#    # 配置负载均衡算法
#    loadBalancers:
#      # 算法名称——随机负载均衡算法
#      RANDOM:
#        type: RANDOM